name: Staging

on:
  push:
    branches:
      - main
    paths:
      - apps/**
      - .github/workflows/staging.yaml
      - .github/workflows/production.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolves Git SHA
        id: resolved-sha
        shell: bash
        env:
          RESOLVED_SHA: ${{ github.sha }}
        run: |
          echo "value=${RESOLVED_SHA::8}" >> "${GITHUB_OUTPUT}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: workflow
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=raw,prefix=sha-,value=${{steps.resolved-sha.outputs.value}},enable={{is_default_branch}},priority=300
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v2
        with:
          context: ./apps/hostaway
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build
    steps:
      - name: Install kustomize
        working-directory: ./
        shell: bash
        run: curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image
        uses: nick-fields/retry@v3
        env:
          VERSION: ${{ needs.build.outputs.version }}
          APP_NAME: hostaway
          USERNAME: ${{ github.actor }}
          MESSAGE: >
            Staging deploy triggered by ${{ github.actor }}@${{ github.event.repository.html_url }}.
        with:
          timeout_seconds: 5
          max_attempts: 3
          command: |
            cd ./gitops/tenants/hostaway/overlays/stg

            kustomize edit set image "${APP_NAME}=*:${VERSION}"

            if ! git diff --quiet HEAD || ! git diff --quiet HEAD origin ; then
                echo 'Changes detected, committing and pushing...'
                git config --local user.name 'github-actions[bot]'
                git config --local user.email 'github-actions[bot]@users.noreply.github.com'
                git add .
                git status
                git commit -m "${MESSAGE}"
                git push
            fi
